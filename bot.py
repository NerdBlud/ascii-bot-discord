import discord
from discord.ext import commands
from discord import app_commands, ui, ButtonStyle, Embed, File
from PIL import Image
import io
import pyfiglet

intents = discord.Intents.default()
bot = commands.Bot(command_prefix="!", intents=intents)

CHARACTER_SETS = {
    "standard": "@%#*+=-:. ",
    "detailed": "$@B%8&WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\|()1{}[]?-_+~<>i!lI;:,\"^`'. ",
    "block": "█▓▒░ ",
    "minimal": "# "
}

FONTS = {
    "bold": str.maketrans("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ", "𝗮𝗯𝗰𝗱𝗲𝗳𝗴𝗵𝗶𝗷𝗸𝗹𝗺𝗻𝗼𝗽𝗾𝗿𝘀𝘁𝘂𝘷𝘄𝘅𝘆𝘇𝗔𝗕𝗖𝗗𝗘𝗙𝗚𝗛𝗜𝗝𝗞𝗟𝗠𝗡𝗢𝗣𝗤𝗥𝗦𝗧𝗨𝗩𝗪𝗫𝗬𝗭"),
    "italic": str.maketrans("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ", "𝘢𝘣𝘤𝘥𝘦𝘧𝘨𝘩𝘪𝘫𝘬𝘭𝘮𝘯𝘰𝘱𝘲𝘳𝘴𝘵𝘶𝘷𝘸𝘹𝘺𝘻𝘈𝘉𝘊𝘋𝘌𝘍𝘎𝘏𝘐𝘑𝘒𝘓𝘌𝘍𝘎𝘏𝘐𝘑"),
    "monospace": str.maketrans("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ", "𝚊𝚋𝚌𝚍𝚎𝚏𝚐𝚑𝚒𝚓𝚔𝚕𝚖𝚗𝚘𝚙𝚚𝚛𝚜𝚝𝚞𝚟𝚠𝚡𝚢𝚣𝙰𝙱𝙲𝙳𝙴𝙵𝙶𝙷𝙸𝙹𝙺𝙻𝙼𝙽𝙾𝙿𝚀𝚁𝚂𝚃𝚄𝚅𝚆𝚇𝚈𝚉")
}

def image_to_ascii(image: Image.Image, charset="standard", invert=False, grayscale=False, width=50):
    charset = CHARACTER_SETS.get(charset.lower(), CHARACTER_SETS["standard"])
    if grayscale:
        image = image.convert("L")
    else:
        image = image.convert("RGB")

    aspect_ratio = image.height / image.width
    new_height = int(aspect_ratio * width * 0.55)
    image = image.resize((width, new_height))

    pixels = image.getdata()
    ascii_str = ""
    for i in range(len(pixels)):
        brightness = pixels[i] if isinstance(pixels[i], int) else int(sum(pixels[i][:3]) / 3)
        if invert:
            brightness = 255 - brightness
        index = brightness * (len(charset) - 1) // 255
        ascii_str += charset[index]
        if (i + 1) % width == 0:
            ascii_str += "\n"

    return ascii_str.strip()

def get_optimal_ascii(image, charset="standard", invert=False, grayscale=False):
    max_chars = 3900
    min_w, max_w = 10, 100
    best_fit = ""
    best_width = min_w

    while min_w <= max_w:
        mid = (min_w + max_w) // 2
        ascii_candidate = image_to_ascii(image, charset, invert, grayscale, width=mid)
        if len(ascii_candidate) <= max_chars:
            best_fit = ascii_candidate
            best_width = mid
            min_w = mid + 1
        else:
            max_w = mid - 1

    return best_fit, best_width

class OptionModal(ui.Modal, title="ASCII Options"):
    charset = ui.TextInput(label="Character Set", placeholder="Standard, Detailed, Block, Minimal", required=False)
    invert = ui.TextInput(label="Invert Colors", placeholder="True/False", required=False)
    grayscale = ui.TextInput(label="Grayscale Mode", placeholder="True/False", required=False)

    def __init__(self, image_bytes, user):
        super().__init__()
        self.image_bytes = image_bytes
        self.user = user

    async def on_submit(self, interaction: discord.Interaction):
        if interaction.user != self.user:
            await interaction.response.send_message("You can't modify someone else's image.", ephemeral=True)
            return

        charset = self.charset.value.lower() or "standard"
        invert = self.invert.value.lower() == "true" if self.invert.value else False
        grayscale = self.grayscale.value.lower() == "true" if self.grayscale.value else False

        image = Image.open(io.BytesIO(self.image_bytes))
        ascii_art, used_width = get_optimal_ascii(image, charset, invert, grayscale)

        if len(ascii_art) < 3900:
            embed = Embed(
                title="🖼️ ASCII Art",
                description=f"```\n{ascii_art}\n```\n*Optimized width: {used_width} characters.*",
                color=0x00ffcc
            )
            embed.set_footer(text="Generated by ASCII.dis")
            await interaction.response.send_message(embed=embed)
        else:
            file = File(io.BytesIO(ascii_art.encode()), filename="ascii_output.txt")
            embed = Embed(title="📄 ASCII Art Too Large",
                          description="Output was too large for an embed. Download the `.txt` file below.",
                          color=0xff0000)
            embed.set_footer(text="Generated by ASCII.dis")
            await interaction.response.send_message(embed=embed, file=file)

class ImageButtonView(ui.View):
    def __init__(self, image_bytes, user):
        super().__init__(timeout=60)
        self.image_bytes = image_bytes
        self.user = user

    @ui.button(label="Set ASCII Options", style=ButtonStyle.primary)
    async def set_options(self, interaction: discord.Interaction, button: ui.Button):
        if interaction.user != self.user:
            await interaction.response.send_message("Only the original uploader can configure this.", ephemeral=True)
            return
        await interaction.response.send_modal(OptionModal(self.image_bytes, self.user))

class BigTextModal(ui.Modal, title="Big Text"):
    content = ui.TextInput(label="Your text", required=True, style=discord.TextStyle.paragraph)

    async def on_submit(self, interaction: discord.Interaction):
        ascii_text = pyfiglet.figlet_format(self.content.value)

        if len(ascii_text) < 3900:
            embed = Embed(title="🔠 Big ASCII Text", description=f"```\n{ascii_text}\n```", color=0xff9900)
            await interaction.response.send_message(embed=embed)
        else:
            file = File(io.BytesIO(ascii_text.encode()), filename="bigtext_output.txt")
            embed = Embed(title="📄 ASCII Text Too Large",
                          description="Your big text was too large to display in an embed. Download the `.txt` file below.",
                          color=0xff0000)
            await interaction.response.send_message(embed=embed, file=file)

@bot.event
async def on_ready():
    await bot.tree.sync()
    print(f"✅ ASCII.dis is online! Logged in as {bot.user}")

@bot.tree.command(name="ascii", description="Upload an image and convert it to ASCII art.")
@discord.app_commands.describe(image="The image to convert to ASCII.")
async def ascii(interaction: discord.Interaction, image: discord.Attachment):
    if not image.content_type.startswith("image/"):
        await interaction.response.send_message("Please upload a valid image file.", ephemeral=True)
        return

    image_bytes = await image.read()

    embed = Embed(title="🎨 ASCII Art Generator",
                  description="Click the button below to configure your ASCII conversion settings.",
                  color=0x0099ff)
    embed.set_author(name="ASCII.dis", icon_url=bot.user.avatar.url if bot.user.avatar else None)
    embed.set_footer(text="Author: Nerdblud")

    view = ImageButtonView(image_bytes=image_bytes, user=interaction.user)
    await interaction.response.send_message(embed=embed, view=view)

@bot.tree.command(name="bigtext", description="Make your text appear huge and spaced.")
async def bigtext(interaction: discord.Interaction):
    await interaction.response.send_modal(BigTextModal())

@bot.tree.command(name="font", description="Show available text styles.")
async def font(interaction: discord.Interaction):
    styles = "\n".join([f"• `{name}`" for name in FONTS.keys()])
    await interaction.response.send_message(embed=Embed(title="Available Font Styles", description=styles, color=0x3366ff))

bot.run("YOUR_BOT_TOKEN_HERE")
